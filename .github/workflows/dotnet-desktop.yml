name: Generate EXE
run-name: Setup Release-${{ github.run_number }} 
on:
  workflow_dispatch:
  push:
    branches:
       - master
    paths-ignore: 
       - ".github/**"
       - "README.md"

jobs:

  build:

    runs-on: windows-latest
    steps:
         - name: Checkout
           uses: actions/checkout@v3
           with:
              fetch-depth: 0
              ref: master

    # Install the .NET Core workload
         - name: Install .NET Core
           uses: actions/setup-dotnet@v3
           with:
              dotnet-version: 8.0.x

    # Restore the application to populate the obj folder with RuntimeIdentifiers
         - run: |
               dotnet build TurtleCommandApp.sln --configuration release --output "${{github.workspace}}\setup"

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
         - name: Upload build artifacts
           uses: actions/upload-artifact@v3
           with:
                name: Setup Exe
                path: ${{ github.workspace }}\setup

         - name: Create Tag
           run: |
              git tag  ${{env.RELEASE}}
              git push origin  ${{env.RELEASE}}
           env:
            RELEASE: "v${{github.run_number}}}"


         - name: Create Release
           id: create_release
           uses: actions/create-release@v1
           env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
           with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                    Changes in this Release
                    - First Change
                    - Second Change
                  draft: false
                  prerelease: false
              
